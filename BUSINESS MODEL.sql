CREATE DATABASE GITHUB
USE GITHUB;


CREATE PROCEDURE TABLEGEN @TABLENAME AS NVARCHAR(128), @COLUMN AS NVARCHAR(MAX)
AS
BEGIN
     DECLARE @SQL AS NVARCHAR(MAX);

	 SET @SQL = 'CREATE TABLE ' + QUOTENAME(@TABLENAME) + ' (' + @COLUMN + ')';
	 EXEC (@SQL);

	 PRINT('TABLE ' + @TABLENAME + ' created successfully!')
	 EXEC ('SELECT * FROM ' + @TABLENAME)

END;

EXEC TABLEGEN 
    @TABLENAME = 'SUPPLIER',
    @COLUMN = 'SID NVARCHAR(5) PRIMARY KEY, SNAME NVARCHAR(50) NOT NULL, SADD NVARCHAR(100) NOT NULL, SCITY NVARCHAR(20) CHECK(SCITY = ''SHIMLA''), SPHONE VARCHAR(10) UNIQUE, EMAIL NVARCHAR(50)';

EXEC TABLEGEN 
    @TABLENAME = 'CUST',
    @COLUMN = 'CID NVARCHAR(5) PRIMARY KEY, CNAME NVARCHAR(50) NOT NULL, ADDRESS NVARCHAR(100) NOT NULL, CITY NVARCHAR(50) NOT NULL, PHONE VARCHAR(10) NOT NULL, EMAIL NVARCHAR(40) NOT NULL, DOB DATE CHECK (DOB < ''1 JAN 2000'')';

EXEC TABLEGEN 
    @TABLENAME = 'PRODUCTS',
    @COLUMN = 'PID NVARCHAR(5) PRIMARY KEY, PDESC NVARCHAR(50) NOT NULL, PRICE INT CHECK (PRICE > 0), CATEGORY NVARCHAR(5) CHECK (CATEGORY IN (''IT'',''HA'', ''HC'')), SID NVARCHAR(5) REFERENCES SUPPLIER(SID)';

EXEC TABLEGEN 
    @TABLENAME = 'ORDERS',
    @COLUMN = 'OID NVARCHAR(5) PRIMARY KEY, ODATE DATE, CID NVARCHAR(5) REFERENCES CUST(CID), SID NVARCHAR(5) REFERENCES SUPPLIER(SID), OQTY INT CHECK(OQTY >= 1)';

EXEC TABLEGEN 
    @TABLENAME = 'STOCK',
    @COLUMN = 'PID NVARCHAR(5) REFERENCES PRODUCTS(PID), SQTY INT CHECK(SQTY >= 0), ROL INT CHECK(ROL >0), MOQ INT CHECK(MOQ >= 5)';
DROP TABLE CUST
DROP TABLE STOCK
DROP TABLE PRODUCTS

CREATE PROCEDURE SEQGEN @SEQNAME AS NVARCHAR(15)
AS
BEGIN
     DECLARE @SEQ AS NVARCHAR(MAX);
	 SET @SEQ = 'CREATE SEQUENCE ' +  QUOTENAME(@SEQNAME) + ' START WITH 1 INCREMENT BY 1'
	 EXEC sp_executesql @SEQ;

	 PRINT ('SEQUENCE ' + @SEQNAME + ' created successfully!')
END;


SEQGEN 'SUPPLY';
SEQGEN 'CUSTOMER';
SEQGEN 'PROD';
SEQGEN 'ORD';
DROP SEQUENCE ORD


CREATE FUNCTION IDGEN(@INIT AS CHAR(1), @N AS INT)
RETURNS VARCHAR(5)
AS
BEGIN
    DECLARE @ID AS VARCHAR(5);
	SET @ID = CASE
	          WHEN @N <10 THEN CONCAT(@INIT,'000' ,@N)
			  WHEN @N <100 THEN CONCAT(@INIT,'00', @N)
			  WHEN @N <1000 THEN CONCAT(@INIT, '0', @N)
			  WHEN @N <10000 THEN CONCAT(@INIT, @N)
			  ELSE 'NA'
	END;
	RETURN @ID;
END;


CREATE PROCEDURE INTABLE @TABLENAME AS NVARCHAR(15), @VALUES AS NVARCHAR(MAX)
AS
BEGIN
	DECLARE @OUT AS NVARCHAR(MAX);

	IF @TABLENAME = 'SUPPLIER'
	   SET @OUT = 'INSERT INTO ' + @TABLENAME + ' VALUES (''' + DBO.IDGEN(LEFT(@TABLENAME,1), NEXT VALUE FOR SUPPLY)+ ''', ' + @VALUES + ')';
	ELSE IF @TABLENAME = 'CUST'
	   SET @OUT = 'INSERT INTO ' + @TABLENAME + ' VALUES (''' + DBO.IDGEN(LEFT(@TABLENAME,1), NEXT VALUE FOR CUSTOMER)+ ''', ' + @VALUES + ')';
	ELSE IF @TABLENAME = 'PRODUCTS'
	   SET @OUT = 'INSERT INTO ' + @TABLENAME + ' VALUES (''' + DBO.IDGEN(LEFT(@TABLENAME,1), NEXT VALUE FOR PROD)+ ''', ' + @VALUES + ')';
	ELSE IF @TABLENAME = 'ORDERS'
	   SET @OUT = 'INSERT INTO ' + @TABLENAME + ' VALUES (''' + DBO.IDGEN(LEFT(@TABLENAME,1), NEXT VALUE FOR ORD)+ ''', ' + @VALUES + ')';
	ELSE IF @TABLENAME = 'STOCK'
	   SET @OUT = 'INSERT INTO ' + @TABLENAME + ' VALUES (' + @VALUES + ')';
	ELSE 
	SET @OUT = 0
		
	   EXEC(@OUT)
	   EXEC('SELECT * FROM ' + @TABLENAME)
END;

DROP PROCEDURE INTABLE

SELECT * FROM SUPPLIER
SELECT * FROM CUST
SELECT * FROM PRODUCTS
SELECT * FROM ORDERS
SELECT * FROM STOCK

INTABLE
    @TABLENAME = 'SUPPLIER',
	@VALUES = '''GAGAN NEGI'', ''H. NO. 114 NIRMAND'', ''SHIMLA'', ''9736241014'', ''GAGAN.NEGI66@GMAIL.COM''';

INTABLE
    @TABLENAME = 'CUST',
	@VALUES = '''SONIA SHARMA'', ''1205 11TH TOWER URBAN PYRAMID'', ''PALAMPUR'',''7018849551'', ''AR.SONIASHARMA@GMAIL.COM'',''18 JAN 1994''';

INTABLE
    @TABLENAME = 'PRODUCTS',
	@VALUES = '''B P MONITOR'', 1290, ''HC'',''S0001''';

INTABLE
    @TABLENAME = 'ORDERS',
	@VALUES = '''19 JUN 2022'', ''C0001'', ''S0001'',2';

INTABLE
    @TABLENAME = 'STOCK',
	@VALUES = '''P0001'', 90, 5, 5';

